version: '3'

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

services:

  web:
    image: carlhat/server-app:latest
    ports:
      - "8000:8000"
    deploy:
     resources:
        limits:
          cpus: '0.25'
          memory: 256M
  redis:
    image: redis/redis-stack-server:latest
    ports:
      - "6379:6379"
    deploy:
     resources:  
        limits:
          cpus: '0.25'
          memory: 256M

  visualizer:
    image: zhijiewang22/visualizer
    ports:
      - "5000:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]

  prometheus:
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    command: "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/alert-rules.yml:/etc/prometheus/alert-rules.yml:ro
      - ./prometheus-data:/prometheus
    deploy:
      placement:
        constraints: [node.role == manager]

  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
      - GF_ENABLE_GZIP=true
      - GF_DEFAULT_APP_MODE=development
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana-data:/var/lib/grafana
    deploy:
      placement:
        constraints: [node.role == manager]

  alertmanager:
    image: prom/alertmanager:latest
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    deploy:
      placement:
        constraints: [node.role == manager]

  scaler:
    image: carlhat/my-scaler:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "5001:5001"
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
      placement:
        constraints: [node.role == manager]

  node_exporter:
    image: prom/node-exporter:latest
    ports:
      - 9100:9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
    deploy:
      mode: global

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global